{
    "raw_input": "CWE-399 int xfs_setattr_nonsize ( struct xfs_inode * ip , struct iattr * iattr , int flags ) { xfs_mount_t * mp = ip -> i_mount ; struct inode * inode = VFS_I ( ip ) ; int mask = iattr -> ia_valid ; xfs_trans_t * tp ; int error ; kuid_t uid = GLOBAL_ROOT_UID , iuid = GLOBAL_ROOT_UID ; kgid_t gid = GLOBAL_ROOT_GID , igid = GLOBAL_ROOT_GID ; struct xfs_dquot * udqp = NULL , * gdqp = NULL ; struct xfs_dquot * olddquot1 = NULL , * olddquot2 = NULL ; ASSERT ( ( mask & ATTR_SIZE ) == 0 ) ; if ( XFS_IS_QUOTA_ON ( mp ) && ( mask & ( ATTR_UID | ATTR_GID ) ) ) { uint qflags = 0 ; if ( ( mask & ATTR_UID ) && XFS_IS_UQUOTA_ON ( mp ) ) { uid = iattr -> ia_uid ; qflags |= XFS_QMOPT_UQUOTA ; } else { uid = inode -> i_uid ; } if ( ( mask & ATTR_GID ) && XFS_IS_GQUOTA_ON ( mp ) ) { gid = iattr -> ia_gid ; qflags |= XFS_QMOPT_GQUOTA ; } else { gid = inode -> i_gid ; } ASSERT ( udqp == NULL ) ; ASSERT ( gdqp == NULL ) ; error = xfs_qm_vop_dqalloc ( ip , xfs_kuid_to_uid ( uid ) , xfs_kgid_to_gid ( gid ) , xfs_get_projid ( ip ) , qflags , & udqp , & gdqp , NULL ) ; if ( error ) return error ; } error = xfs_trans_alloc ( mp , & M_RES ( mp ) -> tr_ichange , 0",
    "tokenized_input": [
        0,
        347,
        9112,
        12,
        26871,
        6979,
        3023,
        17884,
        1215,
        8738,
        44156,
        1215,
        282,
        1790,
        2072,
        36,
        29916,
        3023,
        17884,
        1215,
        179,
        4636,
        1009,
        36180,
        2156,
        29916,
        939,
        44156,
        1009,
        939,
        44156,
        2156,
        6979,
        9287,
        4839,
        25522,
        3023,
        17884,
        1215,
        17336,
        1215,
        90,
        1009,
        44857,
        5457,
        36180,
        43839,
        939,
        1215,
        17336,
        25606,
        29916,
        11,
        4636,
        1009,
        11,
        4636,
        5457,
        468,
        7881,
        1215,
        100,
        36,
        36180,
        4839,
        25606,
        6979,
        11445,
        5457,
        939,
        44156,
        43839,
        1437,
        493,
        1215,
        42679,
        25606,
        3023,
        17884,
        1215,
        9981,
        1215,
        90,
        1009,
        326,
        642,
        25606,
        6979,
        5849,
        25606,
        449,
        29897,
        1215,
        90,
        1717,
        808,
        5457,
        12209,
        7912,
        2118,
        1215,
        8727,
        3293,
        1215,
        46508,
        2156,
        939,
        29897,
        5457,
        12209,
        7912,
        2118,
        1215,
        8727,
        3293,
        1215,
        46508,
        25606,
        14091,
        808,
        1215,
        90,
        821,
        808,
        5457,
        12209,
        7912,
        2118,
        1215,
        8727,
        3293,
        1215,
        534,
        2688,
        2156,
        23057,
        808,
        5457,
        12209,
        7912,
        2118,
        1215,
        8727,
        3293,
        1215,
        534,
        2688,
        25606,
        29916,
        3023,
        17884,
        1215,
        417,
        2253,
        1242,
        1009,
        1717,
        47518,
        642,
        5457,
        48955,
        2156,
        1009,
        821,
        47518,
        642,
        5457,
        48955,
        25606,
        29916,
        3023,
        17884,
        1215,
        417,
        2253,
        1242,
        1009,
        793,
        417,
        2253,
        1242,
        134,
        5457,
        48955,
        2156,
        1009,
        793,
        417,
        2253,
        1242,
        176,
        5457,
        48955,
        25606,
        20860,
        18854,
        36,
        36,
        11445,
        359,
        3263,
        6997,
        1215,
        49340,
        4839,
        45994,
        321,
        4839,
        25606,
        114,
        36,
        1577,
        7881,
        1215,
        1729,
        1215,
        15513,
        24881,
        1215,
        2191,
        36,
        44857,
        4839,
        48200,
        36,
        11445,
        359,
        36,
        3263,
        6997,
        1215,
        46508,
        1721,
        3263,
        6997,
        1215,
        534,
        2688,
        4839,
        4839,
        4839,
        25522,
        49315,
        2231,
        46760,
        5457,
        321,
        25606,
        114,
        36,
        36,
        11445,
        359,
        3263,
        6997,
        1215,
        46508,
        4839,
        48200,
        1577,
        7881,
        1215,
        1729,
        1215,
        791,
        15513,
        24881,
        1215,
        2191,
        36,
        44857,
        4839,
        4839,
        25522,
        1717,
        808,
        5457,
        939,
        44156,
        43839,
        1437,
        493,
        1215,
        29897,
        25606,
        2231,
        46760,
        1721,
        5214,
        1577,
        7881,
        1215,
        1864,
        448,
        5733,
        565,
        1215,
        791,
        15513,
        24881,
        25606,
        35524,
        1493,
        25522,
        1717,
        808,
        5457,
        11,
        4636,
        43839,
        939,
        1215,
        29897,
        25606,
        35524,
        114,
        36,
        36,
        11445,
        359,
        3263,
        6997,
        1215,
        534,
        2688,
        4839,
        48200,
        1577,
        7881,
        1215,
        1729,
        1215,
        534,
        15513,
        24881,
        1215,
        2191,
        36,
        44857,
        4839,
        4839,
        25522,
        821,
        808,
        5457,
        939,
        44156,
        43839,
        1437,
        493,
        1215,
        571,
        808,
        25606,
        2231,
        46760,
        1721,
        5214,
        1577,
        7881,
        1215,
        1864,
        448,
        5733,
        565,
        1215,
        534,
        15513,
        24881,
        25606,
        35524,
        1493,
        25522,
        821,
        808,
        5457,
        11,
        4636,
        43839,
        939,
        1215,
        571,
        808,
        25606,
        35524,
        20860,
        18854,
        36,
        1717,
        47518,
        642,
        45994,
        48955,
        4839,
        25606,
        20860,
        18854,
        36,
        821,
        47518,
        642,
        45994,
        48955,
        4839,
        25606,
        5849,
        5457,
        3023,
        17884,
        1215,
        1343,
        119,
        1215,
        705,
        1517,
        1215,
        47518,
        48429,
        36,
        36180,
        2156,
        3023,
        17884,
        1215,
        8644,
        808,
        1215,
        560,
        1215,
        29897,
        36,
        1717,
        808,
        4839,
        2156,
        3023,
        17884,
        1215,
        9043,
        808,
        1215,
        560,
        1215,
        571,
        808,
        36,
        821,
        808,
        4839,
        2156,
        3023,
        17884,
        1215,
        6460,
        1215,
        4892,
        267,
        808,
        36,
        36180,
        4839,
        2156,
        2231,
        46760,
        2156,
        359,
        1717,
        47518,
        642,
        2156,
        359,
        821,
        47518,
        642,
        2156,
        48955,
        4839,
        25606,
        114,
        36,
        5849,
        4839,
        671,
        5849,
        25606,
        35524,
        5849,
        5457,
        3023,
        17884,
        1215,
        9981,
        1215,
        48429,
        36,
        44857,
        2156,
        359,
        256,
        1215,
        32030,
        36,
        44857,
        4839,
        43839,
        2664,
        1215,
        1725,
        10987,
        2156,
        321,
        2
    ],
    "beam_candidates": [
        "\n",
        "<S2SV_ModStart>  ; if ( !  <S2SV_ModEnd>  ) return 0\n",
        "<S2SV_ModStart>  ; if ( ! tx_size ) return 0 ;\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModStart>  , 0 ) )\n",
        "<S2SV_ModStart>  ; if ( !  <S2SV_ModEnd>  ) return 0 ;\n",
        "<S2SV_ModStart>  <S2SV_null> <S2SV_null> <S2SV_null> static\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModEnd>  )\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModEnd>  ) )\n",
        "<S2SV_ModStart>  ; int err = 0 ;  <S2SV_ModEnd>  if (\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModEnd>  , 0 )\n",
        "<S2SV_ModStart>  ; if ( ! tx_size ) return NULL ;\n",
        "<S2SV_ModStart>  ; if ( ! tx_name ) return NULL ;\n",
        "<S2SV_ModStart>  ; if ( ! tx_name ) return 0 ;\n",
        "<S2SV_ModStart>  ; if ( ! tx_size ) return - EINVAL ;\n",
        "<S2SV_ModStart>  <S2SV_null> <S2SV_null> static\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModEnd>  , 0 ) )\n",
        "<S2SV_ModStart>  ; if ( ! tx_name ) return - EINVAL ;\n",
        "<S2SV_ModStart>  = 0 ; if ( !  <S2SV_ModEnd>  ) return 0\n",
        "<S2SV_ModStart>  ; if ( ! tx_size ) return - EINVAL\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModStart>  ) ) )\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModStart>  , 0 )\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModEnd>  , 0\n",
        "<S2SV_ModStart>  ; if ( ! strncpy  <S2SV_ModEnd>  ( ctx ->\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModStart>  , 0 ) ) )\n",
        "<S2SV_ModStart>  = 0 ; if ( !  <S2SV_ModEnd>  ) return 0 ;\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModStart>  , 1 ) )\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModStart>  0 ) ) )\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModStart>  , & 0 ) )\n",
        "<S2SV_ModStart>  ; if ( ! strcmp ( ctx ) ) return - EINVAL ;\n",
        "<S2SV_ModStart>  ; if ( ! tx_name ) return - EINVAL\n",
        "<S2SV_ModStart>  ; if ( ! strcmp ( ctx ) ) return 0 ;\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModStart>  ) )\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModEnd>  , &  <S2SV_ModEnd>  )\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModStart>  0 ) )\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModEnd>  ,\n",
        "<S2SV_ModStart>  ; if ( ! tx_size ) return - EINVAL ; if (\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModStart>  , & 0 )\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModEnd>  ,  <S2SV_ModEnd>  ) )\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModStart>  , NULL ) )\n",
        "<S2SV_ModStart>  ; int err = 0 ;  <S2SV_ModEnd>  if (  <S2SV_ModEnd>  ) {\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModEnd>  , 0 )  <S2SV_ModEnd>  )\n",
        "<S2SV_ModStart>  <S2SV_null> <S2SV_null> <S2SV_null>\n",
        "<S2SV_ModStart>  ; if ( ! strncpy  <S2SV_ModEnd>  ( ctx )\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModEnd>  , &  <S2SV_ModEnd>  ) )\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModEnd>  , sizeof (  <S2SV_ModEnd>  ) )\n",
        "<S2SV_ModStart>  ; if ( TEMP_FAILURE_RETRY (  <S2SV_ModStart>  ) ) ) ; if (\n",
        "<S2SV_ModStart>  <S2SV_null> <S2SV_null> <S2SV_null> <S2SV_null> static\n",
        "<S2SV_ModStart>  <S2SV_null> <S2SV_null> <S2SV_null> static  <S2SV_ModStart>  0 ) { return 0 ; }\n",
        "<S2SV_ModStart>  <S2SV_null> <S2SV_null> <S2SV_null> <SV_null> static\n",
        "<S2SV_ModStart>  <S2SV_null> <S2SV_null> <S2SV_null> static  <S2SV_ModStart>  0 ) { return - 1 ; }\n"
    ],
    "ground_truth": "<S2SV_ModStart>  tp ) ; xfs_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
    "selected_output": "\n"
}