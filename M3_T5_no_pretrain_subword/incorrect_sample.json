{
    "raw_input": "CWE-399 int xfs_setattr_nonsize ( struct xfs_inode * ip , struct iattr * iattr , int flags ) { xfs_mount_t * mp = ip -> i_mount ; struct inode * inode = VFS_I ( ip ) ; int mask = iattr -> ia_valid ; xfs_trans_t * tp ; int error ; kuid_t uid = GLOBAL_ROOT_UID , iuid = GLOBAL_ROOT_UID ; kgid_t gid = GLOBAL_ROOT_GID , igid = GLOBAL_ROOT_GID ; struct xfs_dquot * udqp = NULL , * gdqp = NULL ; struct xfs_dquot * olddquot1 = NULL , * olddquot2 = NULL ; ASSERT ( ( mask & ATTR_SIZE ) == 0 ) ; if ( XFS_IS_QUOTA_ON ( mp ) && ( mask & ( ATTR_UID | ATTR_GID ) ) ) { uint qflags = 0 ; if ( ( mask & ATTR_UID ) && XFS_IS_UQUOTA_ON ( mp ) ) { uid = iattr -> ia_uid ; qflags |= XFS_QMOPT_UQUOTA ; } else { uid = inode -> i_uid ; } if ( ( mask & ATTR_GID ) && XFS_IS_GQUOTA_ON ( mp ) ) { gid = iattr -> ia_gid ; qflags |= XFS_QMOPT_GQUOTA ; } else { gid = inode -> i_gid ; } ASSERT ( udqp == NULL ) ; ASSERT ( gdqp == NULL ) ; error = xfs_qm_vop_dqalloc ( ip , xfs_kuid_to_uid ( uid ) , xfs_kgid_to_gid ( gid ) , xfs_get_projid ( ip ) , qflags , & udqp , & gdqp , NULL ) ; if ( error ) return error ; } error = xfs_trans_alloc ( mp , & M_RES ( mp ) -> tr_ichange , 0 , 0 , 0 , & tp ) ; if ( error ) goto out_dqrele ; xfs_ilock ( ip , XFS_ILOCK_EXCL ) ; xfs_trans_ijoin ( tp , ip , 0 ) ; if ( mask & ( ATTR_UID | ATTR_GID ) ) { iuid = inode -> i_uid ; igid = inode -> i_gid ; gid = ( mask & ATTR_GID ) ? iattr -> ia_gid : igid ; uid = ( mask & ATTR_UID ) ? iattr -> ia_",
    "tokenized_input": [
        1,
        579,
        22,
        3841,
        365,
        2033,
        72,
        12903,
        72,
        2983,
        414,
        267,
        412,
        2033,
        72,
        1562,
        295,
        666,
        269,
        412,
        10371,
        295,
        10371,
        269,
        365,
        639,
        266,
        291,
        2033,
        72,
        1608,
        72,
        93,
        295,
        1373,
        273,
        666,
        276,
        270,
        72,
        1608,
        268,
        412,
        801,
        295,
        801,
        273,
        12977,
        72,
        50,
        267,
        666,
        266,
        268,
        365,
        1516,
        273,
        10371,
        276,
        4977,
        72,
        978,
        268,
        2033,
        72,
        1835,
        72,
        93,
        295,
        1261,
        268,
        365,
        628,
        268,
        12740,
        72,
        93,
        2254,
        273,
        12302,
        72,
        7722,
        72,
        4211,
        269,
        270,
        1463,
        273,
        12302,
        72,
        7722,
        72,
        4211,
        268,
        15975,
        72,
        93,
        3534,
        273,
        12302,
        72,
        7722,
        72,
        7319,
        269,
        270,
        2232,
        273,
        12302,
        72,
        7722,
        72,
        7319,
        268,
        412,
        2033,
        72,
        13674,
        295,
        18140,
        273,
        396,
        269,
        295,
        27750,
        273,
        396,
        268,
        412,
        2033,
        72,
        13674,
        295,
        22286,
        26,
        273,
        396,
        269,
        295,
        22286,
        27,
        273,
        396,
        268,
        4681,
        267,
        267,
        1516,
        302,
        4404,
        72,
        755,
        266,
        348,
        296,
        266,
        268,
        287,
        267,
        3446,
        72,
        1128,
        72,
        6087,
        72,
        450,
        267,
        1373,
        266,
        431,
        267,
        1516,
        302,
        267,
        4404,
        72,
        4211,
        417,
        4404,
        72,
        7319,
        266,
        266,
        266,
        291,
        724,
        521,
        798,
        273,
        296,
        268,
        287,
        267,
        267,
        1516,
        302,
        4404,
        72,
        4211,
        266,
        431,
        3446,
        72,
        1128,
        72,
        62,
        6087,
        72,
        450,
        267,
        1373,
        266,
        266,
        291,
        2254,
        273,
        10371,
        276,
        4977,
        72,
        1463,
        268,
        521,
        798,
        921,
        3446,
        72,
        28738,
        72,
        62,
        6087,
        268,
        290,
        408,
        291,
        2254,
        273,
        801,
        276,
        270,
        72,
        1463,
        268,
        290,
        287,
        267,
        267,
        1516,
        302,
        4404,
        72,
        7319,
        266,
        431,
        3446,
        72,
        1128,
        72,
        48,
        6087,
        72,
        450,
        267,
        1373,
        266,
        266,
        291,
        3534,
        273,
        10371,
        276,
        4977,
        72,
        2232,
        268,
        521,
        798,
        921,
        3446,
        72,
        28738,
        72,
        48,
        6087,
        268,
        290,
        408,
        291,
        3534,
        273,
        801,
        276,
        270,
        72,
        2232,
        268,
        290,
        4681,
        267,
        18140,
        348,
        396,
        266,
        268,
        4681,
        267,
        27750,
        348,
        396,
        266,
        268,
        628,
        273,
        2033,
        72,
        11078,
        72,
        16309,
        72,
        12484,
        913,
        267,
        666,
        269,
        2033,
        72,
        13682,
        72,
        336,
        72,
        1463,
        267,
        2254,
        266,
        269,
        2033,
        72,
        16692,
        72,
        336,
        72,
        2232,
        267,
        3534,
        266,
        269,
        2033,
        72,
        479,
        72,
        17387,
        267,
        666,
        266,
        269,
        521,
        798,
        269,
        302,
        18140,
        269,
        302,
        27750,
        269,
        396,
        266,
        268,
        287,
        267,
        628,
        266,
        355,
        628,
        268,
        290,
        628,
        273,
        2033,
        72,
        1835,
        72,
        913,
        267,
        1373,
        269,
        302,
        429,
        72,
        2442,
        267,
        1373,
        266,
        276,
        664,
        72,
        82,
        2386,
        269,
        296,
        269,
        296,
        269,
        296,
        269,
        302,
        1261,
        266,
        268,
        287,
        267,
        628,
        266,
        427,
        535,
        72,
        18204,
        268,
        2033,
        72,
        82,
        633,
        267,
        666,
        269,
        3446,
        72,
        50,
        1102,
        72,
        7038,
        266,
        268,
        2033,
        72,
        1835,
        72,
        21754,
        267,
        1261,
        269,
        666,
        269,
        296,
        266,
        268,
        287,
        267,
        1516,
        302,
        267,
        4404,
        72,
        4211,
        417,
        4404,
        72,
        7319,
        266,
        266,
        291,
        270,
        1463,
        273,
        801,
        276,
        270,
        72,
        1463,
        268,
        270,
        2232,
        273,
        801,
        276,
        270,
        72,
        2232,
        268,
        3534,
        273,
        267,
        1516,
        302,
        4404,
        72,
        7319,
        266,
        722,
        10371,
        276,
        4977,
        72,
        2232,
        347,
        270,
        2232,
        268,
        2254,
        273,
        267,
        1516,
        302,
        4404,
        72,
        4211,
        266,
        722,
        10371,
        276,
        4977,
        72,
        2
    ],
    "beam_candidates": [
        "",
        "\ufffd<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
        " InputAddr<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
        " LIBC<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
        "cde<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
        " fex<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
        "removing<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
        " InputAddr<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_EXCL ) ;\n",
        "\ufffd<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_ILOCK_EXCL ) ;\n",
        " LIBC<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_ILOCK_EXCL ) ;\n",
        "\ufffd<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_EXCL ) ;\n",
        " LIBC<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_EXCL ) ;\n",
        "\ufffd<S2SV_ModStart> tp ) ; xfs_I ( ip , XFS_ILOCK_EXCL ) ;\n",
        "\ufffd<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_iunlock ) ;\n",
        " InputAddr<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_ILOCK_EXCL ) ;\n",
        " InputAddr<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_iunlock ) ;\n",
        "\ufffd<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , ip ) ;\n",
        " LIBC<S2SV_ModStart> tp ) ; xfs_I ( ip , XFS_ILOCK_EXCL ) ;\n",
        "\ufffd<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_iunlock ) ;\n",
        " LIBC<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_iunlock ) ;\n",
        "cde<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_EXCL ) ;\n",
        " InputAddr<S2SV_ModStart> tp ) ; xfs_I ( ip , XFS_ILOCK_EXCL ) ;\n",
        " LIBC<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_iunlock ) ;\n",
        " InputAddr<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , ip ) ;\n",
        "\ufffd<S2SV_ModStart> tp ) ; xfs_EXCL ( ip , XFS_ILOCK_EXCL ) ;\n",
        "cde<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_ILOCK_EXCL ) ;\n",
        " InputAddr<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_iunlock ) ;\n",
        "\ufffd<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , ip , XFS_ILOCK_EXCL ) ;\n",
        "cde<S2SV_ModStart> tp ) ; xfs_I ( ip , XFS_ILOCK_EXCL ) ;\n",
        " LIBC<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , ip ) ;\n",
        " fex<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_EXCL ) ;\n",
        " fex<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_ILOCK_EXCL ) ;\n",
        "\ufffd<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_IILOCK_EXCL ) ;\n",
        "cde<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_iunlock ) ;\n",
        "\ufffd<S2SV_ModStart> tp ) ; tp_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
        "cde<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , ip ) ;\n",
        " LIBC<S2SV_ModStart> tp ) ; tp_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
        " LIBC<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , ip , XFS_ILOCK_EXCL ) ;\n",
        "removing<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_ILOCK_EXCL ) ;\n",
        "removing<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_EXCL ) ;\n",
        "\ufffd<S2SV_ModStart> tp tp ) ; xfs_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
        " fex<S2SV_ModStart> tp ) ; xfs_I ( ip , XFS_ILOCK_EXCL ) ;\n",
        " InputAddr<S2SV_ModStart> tp ) ; tp_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
        " fex<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_iunlock ) ;\n",
        "\ufffd\ufffd<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
        " fex fex<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
        "\ufffd<S2SV_ModStart> ) ; xfs_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
        " LIBC<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_IILOCK_EXCL ) ;\n",
        "cde<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_iunlock ) ;\n",
        " LIBC<S2SV_ModStart> tp tp ) ; xfs_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n"
    ],
    "ground_truth": "<S2SV_ModStart> tp ) ; xfs_iunlock ( ip , XFS_ILOCK_EXCL ) ;\n",
    "selected_output": ""
}